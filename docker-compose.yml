version: '3.8'

services:
  task3-enterprise:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: task3_enterprise_system
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STABILITY_API_KEY=${STABILITY_API_KEY}
      - ADOBE_CLIENT_ID=${ADOBE_CLIENT_ID}
      - ADOBE_CLIENT_SECRET=${ADOBE_CLIENT_SECRET}
      - ENV=production
      - PROMETHEUS_PORT=8000
      - HEALTH_CHECK_PORT=8080
      - API_TIMEOUT=120
      - MIN_VARIANTS_THRESHOLD=3
    volumes:
      - ./campaign_briefs:/app/campaign_briefs
      - ./output:/app/output
      - ./alerts:/app/alerts
      - ./logs:/app/logs
      - ./.env:/app/.env
    ports:
      - "8000:8000"  # Prometheus metrics
      - "8080:8080"  # Health checks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - enterprise-network
    
  prometheus:
    image: prom/prometheus:latest
    container_name: task3_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - enterprise-network

  grafana:
    image: grafana/grafana:latest
    container_name: task3_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - enterprise-network

  redis:
    image: redis:7-alpine
    container_name: task3_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - enterprise-network

networks:
  enterprise-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  redis_data: